{"version":3,"sources":["components/Header.jsx","components/Suggestion.jsx","components/SearchSuggestions.jsx","components/Search.jsx","components/MiniWeather.jsx","icons.js","assets/animated/clear-night.svg","assets/animated/wind.svg","assets/animated/snow.svg","assets/animated/thunderstorms-day.svg","assets/animated/dust.svg","assets/animated/partly-cloudy-night-sleet.svg","assets/animated/tornado.svg","assets/animated/haze.svg","assets/animated/haze-night.svg","assets/animated/partly-cloudy-night-snow.svg","assets/animated/partly-cloudy-night.svg","assets/animated/fog.svg","assets/animated/sleet.svg","assets/animated/clear-day.svg","assets/animated/rain.svg","assets/animated/drizzle.svg","assets/animated/partly-cloudy-night-smoke.svg","assets/animated/mist.svg","assets/animated/overcast-day.svg","assets/animated/partly-cloudy-day.svg","assets/animated/overcast-night.svg","assets/animated/fog-night.svg","assets/animated/thunderstorms-night-rain.svg","assets/animated/thunderstorms-day-rain.svg","assets/animated/smoke.svg","assets/animated/partly-cloudy-night-rain.svg","assets/animated/dust-night.svg","assets/animated/cloudy.svg","assets/animated/partly-cloudy-night-drizzle.svg","assets/animated/thunderstorms-night.svg","backgrounds/clear-day.jpg","backgrounds/clear-night.jpg","backgrounds/cloudy-day.jpg","backgrounds/cloudy-night.jpg","backgrounds/fog-day.jpg","backgrounds/fog-night.jpg","backgrounds/overcast.jpg","backgrounds/rain.jpg","backgrounds/snow-day.jpg","backgrounds/snow-night.jpg","backgrounds/thunder-day.jpg","backgrounds/thunder-night.jpg","backgrounds/tornado.jpg","utils.js","components/MainWeather.jsx","components/AlertContainer.jsx","components/Container.jsx","components/Footer.jsx","components/App.jsx","index.js"],"names":["Header","Suggestion","props","onClick","handleClick","id","suggestion","city","country","SearchSuggestions","suggestionsBoxStyle","borderStyle","searchText","className","style","suggestions","map","key","Search","type","placeholder","value","onChange","handleChange","onKeyDown","event","submit","length","active","activeSuggestion","MiniWeather","day","useEffect","icons","document","getElementsByClassName","icon","color","getMiniIcon","temp","hours","minutes","Icons","clearnight","wind","snow","thunderstormsday","dust","partlycloudynightsleet","tornado","haze","hazenight","partlycloudynightsnow","partlycloudynight","fog","sleet","clearday","rain","drizzle","partlycloudynightsmoke","mist","overcastday","partlycloudyday","overcastnight","fognight","thunderstormsnightrain","thunderstormsdayrain","smoke","partlycloudynightrain","dustnight","cloudy","partlycloudynightdrizzle","thunderstormsnight","getDateTimeFromOffset","datetime","gmtOffset","now","Date","getDay","date","getDate","month","getMonth","hour","getHours","minute","getMinutes","getAnimatedIcon","overcast","convertToCelsius","Math","round","MainWeather","weatherData","dateTime","current","time","loaded","location","src","weatherId","alt","hourly","errorCode","CircularProgress","AlertContainer","Alert","severity","Container","useState","setSearchText","error","setWeatherData","setSuggestions","getWeatherDataFromCoordinates","lat","lon","locationUrl","process","weatherUrl","Promise","all","fetch","then","responses","res","json","weather","name","timezone_offset","dt","charAt","resolve","reject","coordinates","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","catch","bg","Backgrounds","body","background","getBackground","cities","data","push","suggestionsLong","filter","toLowerCase","query","includes","slice","target","innerText","ok","status","coord","preventDefault","Footer","require","config","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1acf6133.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n    return (\n        <header>\n            <h1>WeatherUI</h1>\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nfunction Suggestion(props) {\n\n    return (\n        <li onClick={props.handleClick} id={props.id}>\n            {props.suggestion.city}, {props.suggestion.country}\n        </li>\n    )\n}\n\nexport default Suggestion;","import React from \"react\";\nimport Suggestion from \"./Suggestion\";\n\nfunction SearchSuggestions(props) {\n\n    const suggestionsBorder = props.searchText > 2 ? \"solid\" : \"none\";\n    const suggestionsBoxStyle = {\n        borderStyle: suggestionsBorder\n    }\n\n    return (\n        <div>\n            <div className=\"suggestions-box\" style={suggestionsBoxStyle}>\n                {props.suggestions.map(suggestion =>\n                        <Suggestion\n                            key={suggestion.key}\n                            id={suggestion.key}\n                            suggestion={suggestion}\n                            handleClick={props.handleClick}\n                        />\n                        )}\n            </div>\n        </div>\n    )\n}\n\nexport default SearchSuggestions;","import React from \"react\";\nimport SearchSuggestions from \"./SearchSuggestions\";\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\n\nfunction Search(props) {\n\n    function handleKeyPress(event) {\n        if (event.key === 'Enter') {\n            // Enter should submit search\n            props.submit(event);\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"search-bar\">\n                <input type=\"search\" placeholder=\"Search...\" value={props.searchText} \n                    onChange={props.handleChange} onKeyDown={handleKeyPress} \n                />\n                <button onClick={props.submit}><SearchOutlinedIcon className=\"search-icon\" /></button>\n            </div>\n            {(props.searchText.length > 2)  ?\n                <SearchSuggestions \n                searchText={props.searchText}\n                suggestions={props.suggestions}\n                active={props.activeSuggestion}\n                handleClick={props.handleClick}\n            /> :\n            null\n            }\n        </div>\n    )\n}\n\nexport default Search;","import React, { useEffect } from \"react\";\nimport * as WeatherIcons from \"react-icons/wi\"\n\nfunction MiniWeather(props) {\n\n    const day = props.day;\n\n    function getMiniIcon(id, day) {\n        switch (true) {\n            case (id < 233):\n                return day ? <WeatherIcons.WiDayThunderstorm className=\"mini-icon\"/> : <WeatherIcons.WiNightThunderstorm className=\"mini-icon\"/>;\n            case (id < 322):\n                return day ? <WeatherIcons.WiRainMix className=\"mini-icon\"/> : <WeatherIcons.WiNightRainMix className=\"mini-icon\"/>;\n            case (id < 531):\n                return day ? <WeatherIcons.WiRain className=\"mini-icon\"/> : <WeatherIcons.WiNightRain className=\"mini-icon\"/>;\n            case (id === 611):\n                return day ? <WeatherIcons.WiSleet className=\"mini-icon\"/> : <WeatherIcons.WiNightSleet className=\"mini-icon\"/>;\n            case (id < 623):\n                return day ? <WeatherIcons.WiSnow className=\"mini-icon\"/> : <WeatherIcons.WiNightSnow className=\"mini-icon\"/>;\n            case (id === 731):\n                return <WeatherIcons.WiDust className=\"mini-icon\"/>;\n            case (id < 742):\n                return day ? <WeatherIcons.WiDayFog className=\"mini-icon\"/> : <WeatherIcons.WiNightFog className=\"mini-icon\"/>;\n            case (id < 763):\n                return <WeatherIcons.WiDust className=\"mini-icon\"/>;\n            case (id === 771):\n                return <WeatherIcons.WiStrongWind className=\"mini-icon\"/>;\n            case (id === 781):\n                return <WeatherIcons.WiTornado className=\"mini-icon\"/>;\n            case (id === 800):\n                return day ? <WeatherIcons.WiDaySunny className=\"mini-icon\"/> : <WeatherIcons.WiNightClear className=\"mini-icon\"/>;\n            case (id < 804):\n                return day ? <WeatherIcons.WiDayCloudy className=\"mini-icon\"/> : <WeatherIcons.WiNightCloudy className=\"mini-icon\"/>;\n            case (id === 804):\n                return <WeatherIcons.WiCloudy className=\"mini-icon\"/>\n            default:\n                return <WeatherIcons.WiCloudy className=\"mini-icon\"/>\n        }\n    }\n    \n    useEffect(() => {\n        const icons = document.getElementsByClassName(\"mini-icon\");\n        const iconsArray = [...icons];\n        iconsArray.map(icon => icon.style.color = (day ? \"rgb(50, 50, 50)\" : \"rgb(173, 173, 173)\"));\n    }); \n    \n\n    return (\n        <div className=\"mini-weather-container\">\n            {getMiniIcon(props.id, day)}\n            <h3>{props.temp}°C</h3>\n            <p>{props.hours}:{props.minutes}</p>\n        </div>\n    )\n}\n\nexport default MiniWeather;","import clearnight from './assets/animated/clear-night.svg';\nimport wind from './assets/animated/wind.svg';\nimport snow from './assets/animated/snow.svg';\nimport thunderstormsday from './assets/animated/thunderstorms-day.svg';\nimport dust from './assets/animated/dust.svg';\nimport partlycloudynightsleet from './assets/animated/partly-cloudy-night-sleet.svg';\nimport tornado from './assets/animated/tornado.svg';\nimport haze from './assets/animated/haze.svg';\nimport hazenight from './assets/animated/haze-night.svg';\nimport partlycloudynightsnow from './assets/animated/partly-cloudy-night-snow.svg';\nimport partlycloudynight from './assets/animated/partly-cloudy-night.svg';\nimport fog from './assets/animated/fog.svg';\nimport sleet from './assets/animated/sleet.svg';\nimport clearday from './assets/animated/clear-day.svg';\nimport rain from './assets/animated/rain.svg';\nimport drizzle from './assets/animated/drizzle.svg';\nimport partlycloudynightsmoke from './assets/animated/partly-cloudy-night-smoke.svg';\nimport mist from './assets/animated/mist.svg';\nimport overcastday from './assets/animated/overcast-day.svg';\nimport partlycloudyday from './assets/animated/partly-cloudy-day.svg';\nimport overcastnight from './assets/animated/overcast-night.svg';\nimport fognight from './assets/animated/fog-night.svg';\nimport thunderstormsnightrain from './assets/animated/thunderstorms-night-rain.svg';\nimport thunderstormsdayrain from './assets/animated/thunderstorms-day-rain.svg';\nimport smoke from './assets/animated/smoke.svg';\nimport partlycloudynightrain from './assets/animated/partly-cloudy-night-rain.svg';\nimport dustnight from './assets/animated/dust-night.svg';\nimport cloudy from './assets/animated/cloudy.svg';\nimport partlycloudynightdrizzle from './assets/animated/partly-cloudy-night-drizzle.svg';\nimport thunderstormsnight from './assets/animated/thunderstorms-night.svg';\n\nconst Icons = {\nclearnight,\nwind,\nsnow,\nthunderstormsday,\ndust,\npartlycloudynightsleet,\ntornado,\nhaze,\nhazenight,\npartlycloudynightsnow,\npartlycloudynight,\nfog,\nsleet,\nclearday,\nrain,\ndrizzle,\npartlycloudynightsmoke,\nmist,\novercastday,\npartlycloudyday,\novercastnight,\nfognight,\nthunderstormsnightrain,\nthunderstormsdayrain,\nsmoke,\npartlycloudynightrain,\ndustnight,\ncloudy,\npartlycloudynightdrizzle,\nthunderstormsnight,\n};\n\nexport default Icons;","export default __webpack_public_path__ + \"static/media/clear-night.9ed9031b.svg\";","export default __webpack_public_path__ + \"static/media/wind.7666ea56.svg\";","export default __webpack_public_path__ + \"static/media/snow.ef3313da.svg\";","export default __webpack_public_path__ + \"static/media/thunderstorms-day.448033cc.svg\";","export default __webpack_public_path__ + \"static/media/dust.d93c8671.svg\";","export default __webpack_public_path__ + \"static/media/partly-cloudy-night-sleet.9a9df5ac.svg\";","export default __webpack_public_path__ + \"static/media/tornado.1eea9a31.svg\";","export default __webpack_public_path__ + \"static/media/haze.4a31f4dd.svg\";","export default __webpack_public_path__ + \"static/media/haze-night.7c71037c.svg\";","export default __webpack_public_path__ + \"static/media/partly-cloudy-night-snow.074350e6.svg\";","export default __webpack_public_path__ + \"static/media/partly-cloudy-night.4aca209b.svg\";","export default __webpack_public_path__ + \"static/media/fog.0103d56b.svg\";","export default __webpack_public_path__ + \"static/media/sleet.132391bc.svg\";","export default __webpack_public_path__ + \"static/media/clear-day.7c89b268.svg\";","export default __webpack_public_path__ + \"static/media/rain.6f43169e.svg\";","export default __webpack_public_path__ + \"static/media/drizzle.ae14aba4.svg\";","export default __webpack_public_path__ + \"static/media/partly-cloudy-night-smoke.cd142d5c.svg\";","export default __webpack_public_path__ + \"static/media/mist.e61faee5.svg\";","export default __webpack_public_path__ + \"static/media/overcast-day.8632010b.svg\";","export default __webpack_public_path__ + \"static/media/partly-cloudy-day.9a86613b.svg\";","export default __webpack_public_path__ + \"static/media/overcast-night.be323821.svg\";","export default __webpack_public_path__ + \"static/media/fog-night.58a5eb74.svg\";","export default __webpack_public_path__ + \"static/media/thunderstorms-night-rain.3a065a9f.svg\";","export default __webpack_public_path__ + \"static/media/thunderstorms-day-rain.db6e82d0.svg\";","export default __webpack_public_path__ + \"static/media/smoke.14e1644a.svg\";","export default __webpack_public_path__ + \"static/media/partly-cloudy-night-rain.6a1e50d9.svg\";","export default __webpack_public_path__ + \"static/media/dust-night.f8354d6a.svg\";","export default __webpack_public_path__ + \"static/media/cloudy.f6e6108e.svg\";","export default __webpack_public_path__ + \"static/media/partly-cloudy-night-drizzle.0989c362.svg\";","export default __webpack_public_path__ + \"static/media/thunderstorms-night.8bb7d6ca.svg\";","export default __webpack_public_path__ + \"static/media/clear-day.ccae97df.jpg\";","export default __webpack_public_path__ + \"static/media/clear-night.d55cd7e7.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy-day.31e74cfb.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy-night.eca66b79.jpg\";","export default __webpack_public_path__ + \"static/media/fog-day.13c27db9.jpg\";","export default __webpack_public_path__ + \"static/media/fog-night.ac959e70.jpg\";","export default __webpack_public_path__ + \"static/media/overcast.070f0ca5.jpg\";","export default __webpack_public_path__ + \"static/media/rain.4ae57c9f.jpg\";","export default __webpack_public_path__ + \"static/media/snow-day.97432fdb.jpg\";","export default __webpack_public_path__ + \"static/media/snow-night.51f058a8.jpg\";","export default __webpack_public_path__ + \"static/media/thunder-day.3e65ddd1.jpg\";","export default __webpack_public_path__ + \"static/media/thunder-night.c3e1e1b9.jpg\";","export default __webpack_public_path__ + \"static/media/tornado.437be0bf.jpg\";","import Icons from './icons'\nimport * as Backgrounds from './backgrounds';\n\nexport function getCurrentLocation() {\n    // Function to get current user coords and store in promise\n    return new Promise((resolve, reject) => {\n        const coordinates = {\n            lat: null,\n            lon: null\n        };\n        function successCallback(pos) {\n            coordinates.lat = pos.coords.latitude;\n            coordinates.lon = pos.coords.longitude;\n            resolve(coordinates);\n        }\n        function errorCallback(error) {\n            reject(error)\n        }\n        navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\n    })\n}\n\nexport function getCoordinatesFromName(cityName) {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${process.env.REACT_APP_WEATHER_KEY}`)\n        .then(res => res.json())\n        .then(data => {return data.coords})\n}\n\nexport function getDateTimeFromOffset(datetime, gmtOffset) {\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const now = new Date((datetime + gmtOffset) * 1000);\n\n    return {\n        day: days[now.getDay()],\n        date: now.getDate(),\n        month: months[now.getMonth()],\n        hour: (now.getHours() < 10 ? '0' : '') + now.getHours(),\n        minute: (now.getMinutes() < 10 ? '0' : '') + now.getMinutes()\n    }\n}\n\nexport function getAnimatedIcon(id, day) {\n    // Determines icon to be displayed from weather id\n    switch (true) {\n        case (id === 211):\n            return day ? Icons.thunderstormsday : Icons.thunderstormsnight;\n        case (id < 233):\n            return day ? Icons.thunderstormsdayrain : Icons.thunderstormsnightrain;\n        case (id < 322):\n            return day ? Icons.drizzle : Icons.partlycloudynightdrizzle;\n        case (id < 532):\n            return day ? Icons.rain : Icons.partlycloudynightrain;\n        case (id < 615 && id > 602):\n            return day ? Icons.sleet : Icons.partlycloudynightsleet;\n        case (id < 623):\n            return day ? Icons.snow : Icons.partlycloudynightsnow;\n        case (id === 701):\n            return Icons.mist;\n        case (id === 711):\n            return day ? Icons.smoke : Icons.partlycloudynightsmoke;\n        case (id === 721):\n            return day ? Icons.haze : Icons.hazenight;\n        case (id === 741):\n            return day ? Icons.fog : Icons.fognight;\n        case (id < 763):\n            return day ? Icons.dust : Icons.dustnight;\n        case (id === 771):\n            return Icons.wind;\n        case (id === 781):\n            return Icons.tornado;\n        case (id === 800):\n            return day ? Icons.clearday : Icons.clearnight;\n        case (id < 803):\n            return day ? Icons.partlycloudyday : Icons.partlycloudynight;\n        case (id === 803):\n            return Icons.cloudy;\n        case (id === 804):\n            return day === true ? Icons.overcast : Icons.overcastnight;\n        default:\n            return Icons.cloudy;\n    }\n}\n\nexport function getBackground(id, day) {\n    // Dynamic background depending on weather and time of day\n    var bg = null;\n\n    switch (true) {\n        case (id < 233):\n            bg = day ? Backgrounds.ThunderDay : Backgrounds.ThunderNight;\n            break;\n        case (id < 532):\n            bg = Backgrounds.Rain;\n            break;\n        case (id < 623):\n            bg = day ? Backgrounds.SnowDay : Backgrounds.SnowNight;\n            break;\n        case (id < 763):\n            bg = day ? Backgrounds.FogDay : Backgrounds.FogNight;\n            break;\n        case (id < 782):\n            bg = Backgrounds.Tornado;\n            break;\n        case (id === 800):\n            bg = day ? Backgrounds.ClearDay : Backgrounds.ClearNight;\n            break;\n        case (id < 804):\n            bg = day ? Backgrounds.CloudyDay : Backgrounds.CloudyNight;\n            break;\n        case (id === 804):\n            bg = Backgrounds.Overcast;\n            break\n        default:\n            bg = Backgrounds.CloudyDay;\n    }\n    document.body.style.background = `url(${bg}), ${day ? \"steelblue\" : \"rgb(189, 189, 189)\"}`;\n}\n\nexport function convertToCelsius(temp) {\n    return Math.round(temp - 273.15);\n}","import React from \"react\";\nimport MiniWeather from \"./MiniWeather\";\nimport { CircularProgress } from \"@mui/material\";\nimport { getAnimatedIcon, convertToCelsius } from '../utils'\n\nfunction MainWeather(props) {\n\n    const weatherData = props.weatherData;\n\n    const dateTime = weatherData.current.time;\n    \n    if (weatherData.loaded) {\n        return (\n            <div className=\"main-weather\">\n                <h2>{weatherData.location}</h2>\n                <h3>{dateTime.day}, {dateTime.date} {dateTime.month}</h3>\n                <p>{dateTime.hour}:{dateTime.minute}</p>\n                <img src={getAnimatedIcon(weatherData.current.weatherId, weatherData.current.day)} alt=\"weather\" />\n                <h1>{convertToCelsius(weatherData.current.temp)}°C</h1>\n                <div className=\"hourly\">\n                    {weatherData.hourly.map(hour =>\n                        <MiniWeather\n                            key={hour.id}\n                            temp={convertToCelsius(hour.temp)}\n                            hours={hour.time.hour}\n                            minutes={hour.time.minute}\n                            id={hour.weatherId}\n                            day={hour.day}\n                        />)}\n                </div>\n            </div>\n        );\n    } else if (weatherData.errorCode === 1000) {\n        return (\n            <div className=\"main-weather\">\n                <h1 className=\"error\">Search for a location to get the weather</h1>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"loading\">\n                <CircularProgress className=\"spinner\" />\n            </div>\n        );\n    }\n}\n\nexport default MainWeather;","import React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nfunction AlertContainer(props) {\n    const errorCode = props.errorCode;\n\n    if (errorCode === 404) {\n        return (\n        <div className=\"alert\">\n            <Alert severity=\"error\">Sorry, we can't get the weather for this location. Please search for somewhere else. </Alert>\n        </div>\n        )\n    } else if (errorCode === 400) {\n        return (\n        <div className=\"alert\">\n            <Alert severity=\"error\">Please enter a place name.</Alert>\n        </div>\n        )\n    } else {\n        return (null);\n    }\n}\n\nexport default AlertContainer;","import React, {useState, useEffect} from \"react\";\nimport Search from \"./Search\";\nimport MainWeather from \"./MainWeather\";\nimport AlertContainer from \"./AlertContainer\";\nimport {getDateTimeFromOffset, getCurrentLocation, getBackground} from '../utils'\nimport data from '../cities.json';\n\n// Container to allow lifting of state from Search, MainWeather and SearchSuggestions\nfunction Container() {\n\n    /* State Management - All states have been lifted up to container to allow\n    data to be passed easily between them */\n    const [searchText, setSearchText] = useState(\"\");\n    const [weatherData, setWeatherData] = useState({\n        location: null,\n        gmtOffset: null,\n        loaded: false,\n        error: false,\n        errorCode: null,\n        current: {\n            time: null,\n            weatherId: null,\n            temp: null,\n            day: true\n        },\n        hourly: [{}]\n    });\n    const [suggestions, setSuggestions] = useState([]);\n\n    function handleSearchChange(event) {\n        setSearchText(event.target.value);\n        setWeatherData({\n            ...weatherData,\n            errorCode: null\n        })\n    }\n\n    function submitSearch(event) {\n        // Submit search query and prevent page refresh\n        getSearchedLocation(searchText);\n        setSearchText(\"\");\n        event.preventDefault();\n    }\n\n    function getSearchedLocation(cityName) {\n        /* Make API request to find coordinates for city, then either call\n        getCurrentWeatherDataFromCoordinates or store error code in weatherData */\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${process.env.REACT_APP_WEATHER_KEY}`)\n        .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else if (res.status === 400) {\n                return Promise.reject(400)\n            }\n            else if (res.status === 404) {\n                return Promise.reject(res.status);\n            } else {\n                return Promise.reject(res.status)\n            }\n        })\n        .then(data => getWeatherDataFromCoordinates(data.coord.lat, data.coord.lon))\n        .catch(error => setWeatherData({\n            ...weatherData,\n            error: true,\n            errorCode: error\n        }))\n    }\n\n    function getWeatherDataFromCoordinates(lat, lon) {\n        /* locationUrl is needed to fetch the city name from coords. This is necessary\n        when fetching the user's current location, as only the users coordinates are\n        granted */\n        const locationUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_WEATHER_KEY}`;\n        // weatherUrl is needed to fetch weather data\n        const weatherUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely,daily,alerts&appid=${process.env.REACT_APP_WEATHER_KEY}`\n        Promise.all([fetch(locationUrl), fetch(weatherUrl)])\n            .then(responses => Promise.all(responses.map(res => res.json())))\n            .then(([location, weather]) => setWeatherData({\n                ...weatherData,\n                location: location.name,\n                gmtOffset: weather.timezone_offset,\n                loaded: true,\n                error: false,\n                errorCode: null,\n                current: {\n                    weatherId: weather.current.weather[0].id,\n                    temp: weather.current.temp,\n                    time: getDateTimeFromOffset(weather.current.dt, weather.timezone_offset),\n                    day: weather.current.weather[0].icon.charAt(2) === \"d\" ? true : false       // use icon name to determine if it's day or night\n                },\n                hourly: [\n                    {\n                        id: 0,\n                        weatherId: weather.hourly[1].weather[0].id,\n                        temp: weather.hourly[1].temp,\n                        time: getDateTimeFromOffset(weather.hourly[1].dt, weather.timezone_offset),\n                        day: weather.hourly[1].weather[0].icon.charAt(2) === \"d\" ? true : false\n                    },\n                    {\n                        id: 1,\n                        weatherId: weather.hourly[3].weather[0].id,\n                        temp: weather.hourly[3].temp,\n                        time: getDateTimeFromOffset(weather.hourly[3].dt, weather.timezone_offset),\n                        day: weather.hourly[3].weather[0].icon.charAt(2) === \"d\" ? true : false\n                    },\n                    {\n                        id: 2,\n                        weatherId: weather.hourly[5].weather[0].id,\n                        temp: weather.hourly[5].temp,\n                        time: getDateTimeFromOffset(weather.hourly[5].dt, weather.timezone_offset),\n                        day: weather.hourly[5].weather[0].icon.charAt(2) === \"d\" ? true : false\n                    },\n                    {\n                        id: 3,\n                        weatherId: weather.hourly[7].weather[0].id,\n                        temp: weather.hourly[7].temp,\n                        time: getDateTimeFromOffset(weather.hourly[7].dt, weather.timezone_offset),\n                        day: weather.hourly[7].weather[0].icon.charAt(2) === \"d\" ? true : false\n                    }\n                ],\n            }))\n\n    }\n\n    // Get current location weather on page load\n    useEffect(() => {\n        getCurrentLocation()\n            .then(coordinates => getWeatherDataFromCoordinates(coordinates.lat, coordinates.lon))\n            .catch(() => setWeatherData({\n                ...weatherData,\n                error: true,\n                errorCode: 1000\n            }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    // If weather data can actually be retrieved, set the appropriate background\n    if (weatherData.current.weatherId !== null) {\n        getBackground(weatherData.current.weatherId, weatherData.current.day);\n    }\n\n\n    // Search suggestion code is shown below\n\n    const cities = [];\n\n    // Store data from cities.json in cities array\n    data.map((location, key) =>\n        cities.push({\n            key: key,\n            city: location.city,\n            country: location.country\n        })\n    );\n    \n    /* When searchText is changed, check that length is greater than 2 characters.\n    If search text is longer than 2 character the cities array is filtered to show\n    possible matches. Matches are stored in suggestionsLong which is then truncated\n    to the top 10 suggestions */\n    useEffect(() => {\n        if (searchText.length > 2) {\n            // Only show suggestions if search text at least 3 characters long\n            const suggestionsLong = cities.filter(function (location) {\n                const city = location.city.toLowerCase();\n                const country = location.country.toLowerCase();\n                const query = searchText.toLowerCase();\n                return city.includes(query) ||\n                    country.includes(query) ||\n                    (city + \" \" + country).includes(query) ||\n                    (country + \" \" + city).includes(query) ||\n                    (city + \", \" + country).includes(query);\n            });\n            setSuggestions(suggestionsLong.slice(0, 10));\n        } else {\n            setSuggestions([]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [searchText])\n\n    function selectSuggestion(event) {\n        setSearchText(event.target.innerText);\n    }\n\n    return (\n        <div>\n            <Search \n                searchText={searchText}\n                handleChange={handleSearchChange}\n                suggestions={suggestions}\n                handleClick={selectSuggestion}\n                submit={submitSearch}\n            />\n            <AlertContainer\n                errorCode={weatherData.errorCode}\n            />\n            <MainWeather \n                weatherData={weatherData} />\n        </div>\n    )\n}\n\nexport default Container;","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <footer>\n            <div>Copyright Jay Akred ⓒ 2021</div>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './Header';\nimport Container from './Container'\nimport Footer from './Footer';\nimport '../styles.css';\nrequire('dotenv').config();\n\nfunction App() {\n\n  return (\n    <div>\n      <Header />\n      <Container />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}